<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="ms-3">Propiedades locales</h2>
    {{!-- <button type="button" class="btn btn-primary me-3" id="btnActivateAllChannels">Activar todos los canales</button> --}}
</div>
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>En Channex</th>
            <th>Channel ID</th>
            <th>Tarifa actual</th>
            <th>Acción Tarifa</th>
            <th>Booking mapeado</th>
            <th>Acción</th>
        </tr>
    </thead>
    <tbody>
        {{#each propiedades}}
        <tr>
            <td>{{propertyDetails.name}}</td>
            <td>
                {{#if channexPropertyId}}
                {{#if existeEnChannex}}
                <span class="badge bg-success">Sí</span><br>
                <small>ID: {{channexPropertyId}}</small>
                {{else}}
                <span class="badge bg-danger">No existe en Channex</span><br>
                <small>ID local: {{channexPropertyId}}</small>
                {{/if}}
                {{else}}
                <span class="badge bg-secondary">No</span>
                {{/if}}
            </td>
            <td>
                {{#if bookingChannelId}}
                {{bookingChannelId}}
                {{else}}
                <span class="text-muted">—</span>
                {{/if}}
            </td>
            <td>
                {{#if tarifa}}
                <span class="badge bg-dark">{{tarifa.title}} ({{tarifa.currency}})</span>
                {{else}}
                <span class="text-muted">Sin tarifa</span>
                {{/if}}
            </td>
            <td>
                {{#if channexPropertyId}}
                {{#if existeEnChannex}}
                {{#if tarifa}}
                <button type="button" class="btn btn-sm btn-info sincronizar-tarifa-btn"
                    data-pmsid="{{_id}}">Sincronizar precios y disponibilidad</button>
                {{else}}
                <button type="button" class="btn btn-sm btn-info crear-tarifa-btn"
                    data-propertyid="{{channexPropertyId}}" data-pmsid="{{_id}}"
                    data-propertyname="{{propertyDetails.name}}" data-roomid="{{channexRoomId}}">
                    Crear tarifa
                </button>
                {{/if}}
                {{else}}
                <button type="button" class="btn btn-sm btn-warning alta-btn" data-id="{{_id}}">Dar de alta</button>
                {{/if}}
                {{else}}
                <button type="button" class="btn btn-sm btn-primary alta-btn" data-id="{{_id}}">Dar de alta
                    propiedad</button>
                {{/if}}
            </td>
            <td>
                {{#if mapeadoBooking}}
                <span class="badge bg-success">Sí</span>
                {{else}}
                <span class="badge bg-danger">No</span>
                {{/if}}
            </td>
            <td>
                {{#if mapeadoBooking}}
                {{!-- <button class="btn btn-sm btn-warning desconectar-booking-btn" data-channelid="{{bookingChannelId}}"
                    data-pmsid="{{_id}}">
                    Desconectar
                </button> --}}
                <button class="btn btn-sm btn-success mapear-booking-btn" data-pmsid="{{_id}}"
                    data-propertyid="{{channexPropertyId}}">
                    Canal listo!
                </button>
                {{else if tarifa}}
                <button class="btn btn-sm btn-success conectar-booking-btn" data-pmsid="{{_id}}"
                    data-propertyid="{{channexPropertyId}}" data-tarifaid="{{tarifa.id}}">
                    Conectar Booking
                </button>
                {{else}}
                <span class="text-muted">---</span>
                {{/if}}
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>

{{!-- Modal mapeo booking --}}
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="tarifaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="bookingMapForm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="tarifaModalLabel">Crear canal en Channex - Booking <span id="propNameBkg"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <label for="booking_property_id">Ingresa el ID de la propiedad de Booking</label>
                    <input type="text" name="booking_property_id" id="booking_property_id" class="form-control" placeholder="6519420">
                    
                    <label for="booking_room_id" class="mt-3">ID Booking room</label>
                    <input type="text" name="booking_room_id" id="booking_room_id" class="form-control" placeholder="6519421">

                    <label for="booking_rate_id" class="mt-3">ID Booking rate</label></label>
                    <input type="text" name="booking_rate_id" id="booking_rate_id" class="form-control" placeholder="6519422">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Mapear</button>
                </div>
            </div>
        </form>
    </div>
</div>


{{!-- Modal tarifas --}}
<div class="modal fade" id="tarifaModal" tabindex="-1" aria-labelledby="tarifaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="tarifaForm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="tarifaModalLabel">Crear tarifa para <span id="propName"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="inputPropertyId" name="property_id">
                    <input type="hidden" id="inputPmsId" name="pms_id">
                    <input type="hidden" id="inputTarifaId" name="tarifa_id">
                    <input type="hidden" id="inputRoomId" name="room_id">

                    {{!-- <div class="mb-3">
                        <label for="roomTitle" class="form-label">Nombre del Room</label>
                        <input type="text" class="form-control" id="roomTitle" name="room_title" required>
                    </div> --}}
                    <div class="mb-3">
                        <label for="rateTitle" class="form-label">Nombre de la Tarifa</label>
                        <input type="text" class="form-control" id="rateTitle" name="rate_title" required>
                    </div>
                    <!-- Puedes agregar más campos si lo necesitas -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Crear Room y Tarifa</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Activar todos los canales

        // Dar de alta propiedad
        document.querySelectorAll('.alta-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                try {
                    // 1. Crea propiedad
                    const pmsId = btn.dataset.id;
                    const res = await fetch(`/api/channex/properties/${pmsId}/create`, { method: 'POST' });
                    const data = await res.json();
                    if (!res.ok) throw new Error(data.error || 'Error al dar de alta propiedad');
                    
                    const property_id = data.data.id;

                    // 2. Crea Room
                    //const roomRes = await fetch(`/api/channex/rooms/booking?pmsid=${pms_id}&ota_name=booking`, {
                    const roomRes = await fetch(`/api/channex/rooms?pmsid=${pmsId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            room_type: {
                                property_id: property_id,
                                //title: room_title,
                                count_of_rooms: 1,
                                //occ_adults: 2,
                                //default_occupancy: 2,
                                occ_children: 0,
                                occ_infants: 0
                            }
                        })
                    });
                    const roomData = await roomRes.json();
                    if (!roomRes.ok) throw new Error(roomData.error || 'Error creando room');

                    const room_type_id = roomData.data.id;
                    const default_occupancy = roomData.data.attributes.default_occupancy;

                    Swal.fire('Alta', 'Propiedad y room creados en Channex', 'success').then(() => location.reload());
                } catch (err) {
                    Swal.fire('Error', err.message, 'error');
                }
            });
        });

        // Crear tarifa
        document.querySelectorAll('.crear-tarifa-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                document.getElementById('inputPropertyId').value = btn.dataset.propertyid;
                document.getElementById('inputPmsId').value = btn.dataset.pmsid;
                document.getElementById('inputRoomId').value = btn.dataset.roomid;
                const propertyName = btn.dataset.propertyname;
                document.getElementById('propName').textContent = propertyName;
                //document.getElementById('roomTitle').value = "ROOM " + propertyName.toUpperCase() + " BOOKING";
                document.getElementById('rateTitle').value = "RATE " + propertyName.toUpperCase() + " BOOKING";
                new bootstrap.Modal(document.getElementById('tarifaModal')).show();
            });
        });

        // Sincronizar tarifa
        document.querySelectorAll('.sincronizar-tarifa-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                try {
                    const pmsId = btn.dataset.pmsid;
                    Swal.fire({ title: 'Sincronizando...', didOpen: () => Swal.showLoading() });
                    const res = await fetch('/api/channex/availability-rates', {
                        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ pmsId, ota_name: 'booking' })
                    });
                    if (!res.ok) throw new Error('Error sincronizando');
                    Swal.close();
                    Swal.fire('Listo', 'Sincronización completa', 'success').then(() => location.reload());
                } catch (err) {
                    Swal.fire('Error', err.message, 'error');
                }
            });
        });

        // Conectar/Desconectar Booking
        document.querySelectorAll('.conectar-booking-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                document.getElementById('inputPropertyId').value = btn.dataset.propertyid;
                document.getElementById('inputPmsId').value = btn.dataset.pmsid;
                document.getElementById('inputTarifaId').value = btn.dataset.tarifaid;

                new bootstrap.Modal(document.getElementById('bookingModal')).show();

            
            });
        });

        document.getElementById('tarifaForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const property_id = document.getElementById('inputPropertyId').value;
            //const room_title = document.getElementById('roomTitle').value;
            const rate_title = document.getElementById('rateTitle').value;
            const pms_id = document.getElementById('inputPmsId').value;
            const room_type_id = document.getElementById('inputRoomId').value;

            Swal.fire({
                title: "Creando room y rate... Sincronizando precios...",
                text: "Esto puede tardar, no actualices esta ventana.",
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            try {

                // 2. Crea Rate
                const rateRes = await fetch(`/api/channex/rates/booking?pmsid=${pms_id}&ota_name=booking`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        rate_plan: {
                            title: rate_title,
                            property_id: property_id,
                            room_type_id: room_type_id,
                            parent_rate_plan_id: null,
                            //options: [{ occupancy: default_occupancy, is_primary: true }],
                            children_fee: "0.00",
                            infant_fee: "0.00",
                            currency: "USD", // Puedes ajustar la moneda
                            sell_mode: "per_room",
                            rate_mode: "manual"
                        }
                    })
                });
                const rateData = await rateRes.json();
                if (!rateRes.ok) throw new Error(rateData.error || 'Error creando rate');

                Swal.close();

                Swal.fire({
                    icon: 'success',
                    title: 'Room y tarifa creados correctamente',
                    confirmButtonText: 'Aceptar'
                }).then(() => window.location.reload());

            } catch (error) {
                Swal.close();
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message,
                    confirmButtonText: 'Aceptar'
                });
            }
        });

        document.getElementById('bookingMapForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const property_id = document.getElementById('inputPropertyId').value;
            const pms_id = document.getElementById('inputPmsId').value;
            const tarifa_id = document.getElementById('inputTarifaId').value;

            const bookingPropertyId = document.getElementById('booking_property_id').value;
            const bookingRoomId = document.getElementById('booking_room_id').value;
            const bookingRateId = document.getElementById('booking_rate_id').value;

            console.log("Booking Property ID:", bookingPropertyId);
            console.log("Booking Room ID:", bookingRoomId);
            console.log("Booking Rate ID:", bookingRateId);

            console.log("Property ID:", property_id);
            console.log("PMS ID:", pms_id);
            console.log("Tarifa ID:", tarifa_id);

            try {
                const res = await fetch(`/api/channex/channels/booking`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        property_id: property_id,
                        pms_id: pms_id,
                        rateListingId: tarifa_id,
                        bookingPropertyId: bookingPropertyId,
                        roomTypeCode: bookingRoomId,
                        ratePlanCode: bookingRateId
                    })
                });
                const data = await res.json();
                if (!res.ok) throw new Error(data.error || 'Error mapeando Booking');
                Swal.fire('Mapeado', 'Booking mapeado', 'success').then(() => location.reload());
            } catch (err) {
                Swal.fire('Error', err.message, 'error');
            }

        });

        document.querySelectorAll('.desconectar-booking-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                try {
                    const { channelid } = btn.dataset;
                    const res = await fetch(`/api/booking/channels/${channelid}/disconnect`, { method: 'POST' });
                    const data = await res.json();
                    if (!res.ok) throw new Error(data.error || 'Error desconectando Booking');
                    Swal.fire('Desconectado', 'Booking desconectado', 'success').then(() => location.reload());
                } catch (err) {
                    Swal.fire('Error', err.message, 'error');
                }
            });
        });

    });
</script>

<!-- Modales omitidos por brevedad, reutilizar los definidos en tu template anterior -->