<h1 class="text-center my-4">Lista de Roles</h1>

<!-- Botón para abrir el modal -->
<button type="button" class="btn btn-primary mb-4" data-bs-toggle="modal" data-bs-target="#createRoleModal">
    Crear Rol
</button>

<!-- Tabla de roles -->
<table id="rolesTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Descripción</th>
            <th>Permisos</th>
            <th>Acciones</th> <!-- Columna para los botones de editar y borrar -->
        </tr>
    </thead>
    <tbody>
        {{#each roles}}
        <tr>
            <td>{{this.name}}</td>
            <td>{{this.description}}</td>
            <td>
                <ul>
                    {{#each this.permissions}}
                    <li>{{this}} ({{lookup ../permissions this}})</li>
                    {{/each}}
                </ul>
            </td>
            <td>
                <!-- Botones de editar y borrar -->
                <button class="btn btn-warning btn-sm"
                        data-role-id="{{this._id}}"
                        data-role-name="{{this.name}}"
                        data-role-description="{{this.description}}"
                        data-role-permissions="{{this.permissions}}"
                        data-bs-toggle="modal" 
                        data-bs-target="#editRoleModal"
                        onclick="fillPermissions(this)">Editar</button>
                <button class="btn btn-danger btn-sm delete-role" data-id="{{this._id}}">Borrar</button>
            </td>
        </tr>
        {{/each}}
    </tbody>
</table>


<!-- Modal para crear un rol -->
<div class="modal fade" id="createRoleModal" tabindex="-1" aria-labelledby="createRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createRoleModalLabel">Crear Rol</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createRoleForm">
                    <input type="hidden" id="roleId" name="roleId"> <!-- Campo oculto para el ID del rol -->
                    <div class="mb-3">
                        <label for="name" class="form-label">Nombre del Rol:</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Descripción:</label>
                        <input type="text" class="form-control" id="description" name="description">
                    </div>
                    <div class="mb-3">
                        <h3>Permisos:</h3>
                        <div class="permissions-list">
                            {{#each permissions}}
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="permissions" value="{{@key}}"
                                    id="perm-{{@key}}">
                                <label class="form-check-label" for="perm-{{@key}}">
                                    {{this}}
                                </label>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>



<!-- Modal para editar un rol -->
<div class="modal fade" id="editRoleModal" tabindex="-1" aria-labelledby="editRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoleModalLabel">Editar Rol</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <input type="hidden" id="editRoleId" name="editRoleId">
            </div>
            <div class="modal-body">
                <form id="editRoleForm">
                    <div class="mb-3">
                        <label for="name" class="form-label">Nombre del Rol:</label>
                        <input type="text" class="form-control" id="edit-name" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Descripción:</label>
                        <input type="text" class="form-control" id="edit-description" name="description">
                    </div>
                    <div class="mb-3">
                        <h3>Permisos:</h3>
                        <div class="permissions-list">
                            {{#each permissions}}
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="permissions" value="{{@key}}"
                                    id="edit-perm-{{@key}}">
                                <label class="form-check-label" for="edit-perm-{{@key}}">
                                    {{this}}
                                </label>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var table = document.getElementById("rolesTable");
        if (table) {

            var dataTable = new DataTable(table, {
                responsive: true,
                paging: true,
                searching: true,
                ordering: true,
                language: {
                    url: "/requires/js/i18n/es-ES.json"
                }
            });
        }
    });

    document.getElementById('createRoleForm').addEventListener('submit', async (event) => {
        event.preventDefault(); // Evitar el envío tradicional del formulario

        const formData = new FormData(event.target);
        const data = {
            name: formData.get('name'),
            description: formData.get('description'),
            permissions: formData.getAll('permissions'),
        };

        try {
            const response = await fetch('/newroles', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            if (!response.ok) {
                throw new Error('Error al crear el rol');
            }

            const role = await response.json();
            console.log('Rol creado:', role);

            // Cerrar el modal
            Swal.fire({
                icon: 'success',
                title: '¡Completado!',
                text: 'Rol creado correctamente.',
                confirmButtonText: 'Aceptar'
            })
            const modal = bootstrap.Modal.getInstance(document.getElementById('createRoleModal'));
            modal.hide();

            // Recargar la página para mostrar el nuevo rol
            window.location.reload();
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Hubo un problema al crear el rol.',
                confirmButtonText: 'Aceptar'
            })
        }
    });

    document.getElementById('editRoleForm').addEventListener('submit', async (event) => {
        event.preventDefault(); // Evitar el envío tradicional del formulario

        const formData = new FormData(event.target);
        
        const roleId = document.getElementById('editRoleId').value;
        const data = {
            id: roleId,
            name: formData.get('name'),
            description: formData.get('description'),
            permissions: formData.getAll('permissions'),
        };

        console.log(data)

        try {
            const response = await fetch(`/roles/${roleId}/edit`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message);
            }

            const role = await response.json();
            console.log('Rol editado:', role);

            // Cerrar el modal
            Swal.fire({
                icon: 'success',
                title: '¡Completado!',
                text: 'Rol editado correctamente.',
                confirmButtonText: 'Aceptar'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.reload();
                }
            })
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Hubo un problema al editar el rol: ' + error.message,
                confirmButtonText: 'Aceptar'
            })
        }

    });

    function fillPermissions(button) {
        const roleId = button.getAttribute('data-role-id');
        const roleName = button.getAttribute('data-role-name');
        const roleDescription = button.getAttribute('data-role-description');
        const rolePermissions = button.getAttribute('data-role-permissions');

        
        console.log(roleId)
        console.log(roleName)
        console.log(roleDescription)
        console.log(rolePermissions)
        
        document.getElementById('editRoleId').value = roleId;
        document.getElementById('edit-name').value = roleName;
        document.getElementById('edit-description').value = roleDescription;

        const permissions = rolePermissions.split(',');
        permissions.forEach(permission => {
            document.getElementById(`edit-perm-${permission}`).checked = true;
        });
    }
</script>