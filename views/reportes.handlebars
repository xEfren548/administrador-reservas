<div class="row flex-column justify-content-center mt-3 " style="width: 95%;">
    <div class="col-12">

        <h1 class="mt-3">Reportes</h1>
        <div class="row mb-3">
            <div class="col-md-2">
                <label for="startDate" class="form-label">Fecha Inicio:</label>
                <input type="date" class="form-control" id="startDate">
            </div>
            <div class="col-md-2">
                <label for="endDate" class="form-label">Fecha Fin:</label>
                <input type="date" class="form-control" id="endDate">
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button id="clearDates" class="btn btn-secondary"><span><i class="fa fa-eraser"
                            aria-hidden="true"></i></span></button>
            </div>
        </div>
        {{!-- <div class="table-responsive">

            <table class="table table-dark table-hover text-center nowrap" id="tablaUtilidades">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Habitación</th>
                        <th scope="col">Concepto</th>
                        <th scope="col">Id Reserva</th>
                        <th scope="col">Monto</th>
                        <th scope="col">Fecha</th>
                        <th scope="col">Usuario</th>

                    </tr>
                </thead>
                <tbody>
                    {{#if utilidades.length}}
                    {{#each utilidades}}
                    <tr>
                        <td>{{this.nombreHabitacion}}</td>
                        <td>{{this.concepto}}</td>
                        <td>{{this.idReserva}}</td>
                        <td>${{this.monto}}</td>
                        <td>{{this.fecha}}</td>
                        <td>{{this.nombreUsuario}}</td>


                    </tr>
                    {{/each}}
                    {{else}}
                    <tr>
                        <td colspan="4">No se encontraron utilidades</td>
                    </tr>

                    {{/if}}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3"><b>Total</b></td>
                        <td id="totalMonto"></td>
                        <td colspan="2"></td>
                    </tr>
                </tfoot>
            </table>
        </div> --}}
        <div class="table-responsive">

            <table class="table table-dark table-hover text-center nowrap" id="tablaUtilidades">
                <thead class="table-light">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Estatus</th>
                        <th scope="col">Creación de reserva</th>
                        <th scope="col">Agente que reserva</th>
                        <th scope="col">Cabaña</th>
                        <th scope="col">Costo limpieza</th>
                        <th scope="col">Admin ligado</th>
                        <th scope="col">Entrada</th>
                        <th scope="col">Salida</th>
                        <th scope="col">Noches</th>
                        <th scope="col">Adultos</th>
                        <th scope="col">Nombre de cliente</th>
                        <th scope="col">Email de cliente</th>
                        <th scope="col">Notas internas</th>
                        <th scope="col">Notas externas</th>
                        <th scope="col">Teléfono de cliente</th>


                        <th scope="col">Depósito de cliente</th>
                        <th scope="col">Liquida en efectivo</th>
                        <th scope="col">Total pagado cliente</th>
                        <th scope="col">Costo Total reserva</th>


                    </tr>
                </thead>
                <tbody>
                    {{#if reservas.length}}
                    {{#each reservas}}
                    <tr>
                        <td>{{this._id}}</td>
                        <td>{{#if (eq this.status "active")}}
                            <span class="badge bg-success p-2 fs-6" >Activo</span>
                            {{else if (eq this.status "cancelled")}}
                            <span class="badge bg-danger p-2 fs-6" >Cancelado</span>
                            {{else if (eq this.status "reserva de dueño")}}
                            <span class="badge bg-info p-2 fs-6" >Reserva de dueño</span>
                            {{else if (eq this.status "playground")}}
                            <span class="badge bg-warning p-2 fs-6" >Playground</span>
                            {{else}}
                            <span class="badge bg-warning p-2 fs-6" >Pendiente</span>
                            {{/if}}
                        </td>
                        <td>{{this.reservationDate}}</td>
                        <td>{{this.agenteReserva}}</td>
                        <td>{{this.nombreHabitacion}}</td>
                        <td>${{this.costoLimpieza}}</td>
                        <td>{{this.adminLigado}}</td>
                        <td>{{this.arrivalDate}}</td>
                        <td>{{this.departureDate}}</td>
                        <td>{{this.nNights}}</td>
                        <td>{{this.pax}}</td>
                        <td>{{this.nombreCliente}}</td>
                        <td>{{this.correoCliente}}</td>
                        <td>{{this.privateNotes}}</td>
                        <td>{{this.notes}}</td>
                        <td>{{this.telefonoCliente}}</td>


                        <td>${{this.pagosNoLiquidaEfectivo}}</td>
                        <td>${{this.liquidaEfectivo}}</td>
                        <td>${{this.pagosCliente}}</td>
                        <td>${{this.total}}</td>



                    </tr>
                    {{/each}}
                    {{else}}
                    <tr>
                        <td colspan="14">No se encontraron reservas</td>
                    </tr>

                    {{/if}}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="10"><b>Total</b></td>
                        <td id="totalMonto"></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td id="totalMonto2"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>





<script>
    document.addEventListener("DOMContentLoaded", function () {

        var table = document.getElementById("tablaUtilidades");
        if (table) {
            var dataTable = new DataTable(table, {
                "ordering": false, // Puedes especificar aquí el orden inicial de las columnas
                "paging": true, // Habilita la paginación
                "lengthMenu": [5, 10, 25, 50], // Define el menú de longitud de página
                "pageLength": 10, // Establece la longitud de página inicial
                "dom": 'Bfrtip', // Añade los botones a la interfaz
                "search": {
                    "smart": true
                },
                "buttons": [
                    {
                        extend: 'csvHtml5',
                        text: 'Exportar a CSV',
                        footer: true,
                        title: function () {
                            var minDate = document.getElementById('startDate').value;
                            var maxDate = document.getElementById('endDate').value;
                            let mensaje = ""
                            if (minDate && maxDate) {
                                mensaje = `Reporte del ${moment(minDate).format('DD-MM-YYYY')} al ${moment(maxDate).format('DD-MM-YYYY')}`;
                            } else if (minDate) {
                                mensaje = `Reporte desde ${moment(minDate).format('DD-MM-YYYY')}`;
                            } else if (maxDate) {
                                mensaje = `Reporte hasta el ${moment(maxDate).format('DD-MM-YYYY')}`;
                            } else {
                                mensaje = `Reporte ${moment().format('DD-MM-YYYY')}`;
                            }
                            return mensaje;
                        },

                    },
                    {
                        extend: 'pdfHtml5',
                        text: 'Exportar a PDF',
                        title: function () {
                            var minDate = document.getElementById('startDate').value;
                            var maxDate = document.getElementById('endDate').value;
                            let mensaje = ""
                            if (minDate && maxDate) {
                                mensaje = `Reporte del ${moment(minDate).format('DD-MM-YYYY')} al ${moment(maxDate).format('DD-MM-YYYY')}`;
                            } else if (minDate) {
                                mensaje = `Reporte desde ${moment(minDate).format('DD-MM-YYYY')}`;
                            } else if (maxDate) {
                                mensaje = `Reporte hasta el ${moment(maxDate).format('DD-MM-YYYY')}`;
                            } else {
                                mensaje = 'Reporte';
                            }
                            return mensaje;
                        },
                        orientation: 'landscape',
                        pageSize: 'A4',
                        customize: function(doc) {
                                                // Reduce font size to fit all columns
                            doc.styles.tableHeader.fontSize = 8;
                            doc.defaultStyle.fontSize = 7;
                            
                            // Adjust the layout and width
                            doc.content[1].table.widths = '*'.repeat(doc.content[1].table.body[0].length).split('');
                            
                            // Auto fit columns (each column will take an equal amount of space)
                            doc.content[1].layout = {
                                hLineWidth: function(i, node) {
                                    return 0.5;
                                },
                                vLineWidth: function(i, node) {
                                    return 0.5;
                                },
                                hLineColor: function(i, node) {
                                    return '#aaa';
                                },
                                vLineColor: function(i, node) {
                                    return '#aaa';
                                },
                                paddingLeft: function(i, node) {
                                    return 4;
                                },
                                paddingRight: function(i, node) {
                                    return 4;
                                },
                                paddingTop: function(i, node) {
                                    return 2;
                                },
                                paddingBottom: function(i, node) {
                                    return 2;
                                }
                            }
                        }
                    }
                ],
                "initComplete": function () {
                    // Aplica las clases a los botones después de la inicialización
                    var buttons = document.querySelectorAll('.dt-button');
                    buttons.forEach(function (button) {
                        button.classList.add('btn', 'btn-info');
                    });
                    /** 
                    this.api()
                        .columns([3])
                        .every(function () {
                            let column = this;

                            // Create select element
                            let select = document.createElement('select');
                            select.classList.add('d-flex', 'justify-content-start');
                            select.add(new Option('Mostrar todo', ''));
                            column.footer().replaceChildren(select);

                            // Apply listener for user change in value
                            select.addEventListener('change', function () {
                                column
                                    .search(select.value)
                                    .draw();
                            });

                            // Add list of options
                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.add(new Option(d));
                                });
                        });
                **/
                },
                "drawCallback": function () {
                    // Calculate and update the total monto
                    var api = this.api();
                    //var total = api.column(10, { search: 'applied' }).data().reduce(function (a, b) {
                        //return a + parseFloat(b.replace(/[^\d.-]/g, '')); // Remove any currency symbols before parsing
                    //}, 0);
                    var total2 = api.column(19, { search: 'applied' }).data().reduce(function (a, b) {
                            // Verificar que `b` sea un número válido antes de sumar
                            var valor = parseFloat(b.replace(/[^\d.-]/g, ''));
                            return a + (isNaN(valor) ? 0 : valor); // Sumar solo si el valor es numérico
                        }, 0);
                    //document.getElementById('totalMonto').textContent = `$${total.toFixed(2)}`;
                    document.getElementById('totalMonto2').textContent = `$${total2.toFixed(2)}`;
                }
            });

            DataTable.ext.search.push(function (settings, data, dataIndex) {
                var minDate = moment(document.getElementById('startDate').value, "YYYY-MM-DD").startOf('day');
                var maxDate = moment(document.getElementById('endDate').value, "YYYY-MM-DD").endOf('day');
                var targetDate = moment(data[6], "DD/MM/YYYY").startOf('day'); // Assuming date is in the 3rd column

                if ((isNaN(minDate) && isNaN(maxDate)) ||
                    (isNaN(minDate) && targetDate <= maxDate) ||
                    (minDate <= targetDate && isNaN(maxDate)) ||
                    (minDate <= targetDate && targetDate <= maxDate)) {
                    return true;
                }
                return false;
            });

            document.getElementById('startDate').addEventListener('change', function () {
                dataTable.draw();
            });

            document.getElementById('endDate').addEventListener('change', function () {
                dataTable.draw();
            });

            document.getElementById('clearDates').addEventListener('click', function () {
                document.getElementById('startDate').value = '';
                document.getElementById('endDate').value = '';
                dataTable.draw();
            });
        }

    });

    

    function generateRandomColors(numColors) {
        const colors = [];
        for (let i = 0; i < numColors; i++) {
            const color = `hsl(${Math.floor(Math.random() * 360)}, 70%, 60%)`;
            colors.push(color);
        }
        return colors;
    }



</script>