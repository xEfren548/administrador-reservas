<div class="calendar-header">
    <div class="bg-dark mb-3">
        <a name="" id="crear-servicio-btn" class="btn btn-secondary btn-sm m-3" href="#" role="button"
            data-bs-toggle="modal" data-bs-target="#services_entry_modal">Alta de servicios</a>
    </div>
</div>
<div class="row flex-nowrap justify-content-center mt-3" style="width: 95%;">
    <div class="col-10">
        <h1>Lista de servicios</h1>
        <table class="table table-dark table-hover table-responsive" id="tablaServicios">
            <thead class="table-light">
                <tr>
                    <th scope="col">Servicio</th>
                    <th scope="col">Descripción</th>
                    <th scope="col">Proveedor</th>
                    <th scope="col">Administrador de servicios</th>
                    <th scope="col">Costo base</th>
                    <th scope="col">Precio base</th>
                    <th scope="col">1ra comisión</th>
                    <th scope="col">2da comisión</th>
                    <th scope="col">Precio final</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each services}}
                    <tr>
                        <td>{{service}}</td>
                        <td>{{description}}</td>
                        <td> {{supplier}}</td>
                        <td>{{serviceManager}}</td>
                        <td> {{costPrice}}</td>
                        <td> {{basePrice}}</td>
                        <td>{{firstCommission}}</td>
                        <td>{{secondCommission}}</td>
                        <td>{{finalPrice}}</td>
                        <td class="text-center">
                            <button type="button" class="btn btn-primary" 
                            data-service-name="{{service}}"
                            data-service-description="{{description}}"
                            data-service-provider="{{supplierEmail}}"
                            data-service-manager="{{serviceManagerEmail}}"
                            data-service-cost-price="{{costPrice}}"
                            data-service-base-price="{{basePrice}}"
                            data-service-first-commission="{{firstCommission}}"
                            data-service-second-commission="{{secondCommission}}"
                            data-service-final-price="{{finalPrice}}"
                            onclick="showData(this)"
                            data-bs-toggle="modal"
                                data-bs-target="#modify-service_entry_modal">
                                <i class="fa fa-pencil" aria-hidden="true"></i>
                            </button>
                            <button type="button" class="btn btn-danger" data-service-name="{{service}}">
                                <i class="fa fa-trash" aria-hidden="true"></i>
                            </button>
                            <div class="form-item">
                                <p name="errMsg" class="error"></p>
                            </div>
                        </td>
                    </tr>
                {{/each}}  
            </tbody>
        </table>
    </div>
</div>

{{!-- Modals --}}
<!-- Modal alta Servicios -->
<div class="modal fade" id="services_entry_modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmCreateService" action="/api/servicios/crear-servicio" method="post" class="modal-dialog modal-lg"
        role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Alta de Servicios</h5>
                <button type="button" class="close" onclick="$('#services_entry_modal').modal('hide');"
                    aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtService">Servicio</label>
                                <input type="text" name="txtService" id="txtService" class="form-control"
                                    placeholder="Servicio">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtServiceDescription">Descripción</label>
                                <input type="text" name="txtServiceDescription" id="txtServiceDescription"
                                    class="form-control" placeholder="Descripción">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtSupplier">Proveedor</label>
                                <select name="txtSupplier" id="txtSupplier" class="form-control">
                                    <option value="" selected disabled>Selecciona un usuario</option>
                                    {{#each additionalServiceUsers}}
                                        <option value="{{email}}">{{firstName}} {{lastName}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtServiceManager">Administrador de servicios</label>
                                <select name="txtServiceManager" id="txtServiceManager" class="form-control">
                                    <option value="" selected disabled>Selecciona un usuario</option>
                                    {{#each users}}
                                        <option value="{{email}}">{{firstName}} {{lastName}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtCostPrice">Costo base</label>
                                <input type="number" name="txtCostPrice" id="txtCostPrice" class="form-control"
                                    placeholder="Precio base">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtBasePrice">Precio base</label>
                                <input type="number" name="txtBasePrice" id="txtBasePrice" class="form-control"
                                    placeholder="Precio base">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtFirstCommission">1ra comisión</label>
                                <input type="number" name="txtFirstCommission" id="txtFirstCommission"
                                    class="form-control" placeholder="1ra comisión">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtSecondCommission">2da comisión</label>
                                <input type="number" name="txtSecondCommission" id="txtSecondCommission" class="form-control" placeholder="2da comisión">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtFinalPrice">Precio final</label>
                                <input type="number" name="txtFinalPrice" id="txtFinalPrice" class="form-control"
                                    placeholder="Precio final">
                            </div>
                        </div>
                    </div> <!-- Cierre row -->
                </div>
            </div>
            <div class="form-item">
                <p id="txtCreateServiceError" name="errMsg" class="error"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnSaveService">Guardar Servicio</button>
            </div>
        </div>
    </form>
</div>
<!-- End modal alta servicio -->

{{!-- Modal modificar servicio --}}
<div class="modal fade" id="modify-service_entry_modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmUpdateUser" action="/api/servicios/editar-servicio" method="post" class="modal-dialog modal-lg"
        role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Modificar Servicio</h5>
                <button type="button" class="close" onclick="$('#modify-service_entry_modal').modal('hide');"
                    aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtServiceUpd">Servicio</label>
                                <input type="text" name="txtServiceUpd" id="txtServiceUpd" class="form-control"
                                    placeholder="Servicio" disabled>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtServiceDescriptionUpd">Descripción</label>
                                <input type="text" name="txtServiceDescriptionUpd" id="txtServiceDescriptionUpd"
                                    class="form-control" placeholder="Descripción">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtSupplierUpd">Proveedor</label>
                                <select name="txtSupplierUpd" id="txtSupplierUpd" class="form-control">
                                    <option value="" selected disabled>Selecciona un usuario</option>
                                    {{#each additionalServiceUsers}}
                                        <option value="{{email}}">{{firstName}} {{lastName}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtServiceManagerUpd">Administrador de servicios</label>
                                <select name="txtServiceManagerUpd" id="txtServiceManagerUpd" class="form-control">
                                    <option value="" selected disabled>Selecciona un usuario</option>
                                    {{#each users}}
                                        <option value="{{email}}">{{firstName}} {{lastName}}</option>
                                    {{/each}}
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtCostPriceUpd">Costo base</label>
                                <input type="number" name="txtCostPriceUpd" id="txtCostPriceUpd" class="form-control"
                                    placeholder="Costo base">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtBasePriceUpd">Precio base</label>
                                <input type="number" name="txtBasePriceUpd" id="txtBasePriceUpd" class="form-control"
                                    placeholder="Precio base">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtFirstCommissionUpd">1ra comisión</label>
                                <input type="number" name="txtFirstCommissionUpd" id="txtFirstCommissionUpd"
                                    class="form-control" placeholder="1ra comisión">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtSecondCommissionUpd">2da comisión</label>
                                <input type="number" name="txtSecondCommissionUpd" id="txtSecondCommissionUpd" class="form-control" placeholder="2da comisión">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtFinalPriceUpd">Precio final</label>
                                <input type="number" name="txtFinalPriceUpd" id="txtFinalPriceUpd" class="form-control"
                                    placeholder="Precio final">
                            </div>
                        </div>
                    </div> <!-- Cierre row -->
                </div>
            </div>
            <div class="form-item">
                <p id="txtEditServiceError" name="errMsg" class="error"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnUpdateService">Modificar Servicio</button>
            </div>
        </div>
    </form>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var table = document.getElementById("tablaServicios");
        if (table) {
            var dataTable = new DataTable(table, {
                "order": [], // Puedes especificar aquí el orden inicial de las columnas
                "paging": true, // Habilita la paginación
                "lengthMenu": [5, 10, 25, 50], // Define el menú de longitud de página
                "pageLength": 10 // Establece la longitud de página inicial
            });
        }

        // Functions.
        function clearModal(modal) {
            const inputs = modal.querySelectorAll('input');
            inputs.forEach(function (input) {
                input.value = "";
            });
            modal.querySelectorAll("p[name='errMsg']")[0].innerHTML = "";
        }

        // Clearing service's info when closing modal.
        const modals = document.querySelectorAll('.modal');
        modals.forEach(function (modal) {
            modal.addEventListener('hidden.bs.modal', () => {
                clearModal(modal);
            });
        });

        const secondcommisionupdt = document.getElementById('txtSecondCommissionUpd');
        const firstcommisionupdt = document.getElementById('txtFirstCommissionUpd');
        const basepriceupdt = document.getElementById('txtBasePriceUpd');
        const secondcommisionadd = document.getElementById('txtSecondCommission');
        const firstcommisionadd = document.getElementById('txtFirstCommission');
        const basepriceadd = document.getElementById('txtBasePrice');
        const finalpriceadd = document.getElementById('txtFinalPrice');
        const finalpriceupd = document.getElementById('txtFinalPriceUpd');

        secondcommisionupdt.addEventListener("input", finalupdate);
        firstcommisionupdt.addEventListener("input", finalupdate);
        basepriceupdt.addEventListener("input", finalupdate);
        secondcommisionadd.addEventListener("input", finaladd);
        firstcommisionadd.addEventListener("input", finaladd);
        basepriceadd.addEventListener("input", finaladd);

        function finalupdate(e) {
            finalpriceupd.value = parseInt(basepriceupdt.value) + parseInt(firstcommisionupdt.value) + parseInt(secondcommisionupdt.value)
        }

        function finaladd(e) {
            finalpriceadd.value = parseInt(basepriceadd.value) + parseInt(firstcommisionadd.value) + parseInt(secondcommisionadd.value)
        }

        // Saving new service.
        var btnSaveService = document.getElementById("btnSaveService");
        if (btnSaveService) {
            btnSaveService.addEventListener("click", async (event) => {
                event.preventDefault();

                const data = {
                    service: document.getElementById("txtService").value.trim(),
                    description: document.getElementById("txtServiceDescription").value.trim(),
                    supplier: document.getElementById("txtSupplier").value.trim(),
                    serviceManager: document.getElementById("txtServiceManager").value.trim(),
                    costPrice: document.getElementById("txtCostPrice").value.trim(),
                    basePrice: document.getElementById("txtBasePrice").value.trim(),
                    firstCommission: document.getElementById("txtFirstCommission").value.trim(),
                    secondCommission: document.getElementById("txtSecondCommission").value.trim(),
                    finalPrice: document.getElementById("txtFinalPrice").value.trim()
                };

                fetch('/api/servicios/crear-servicio', {
                    method: 'POST',
                    headers: {
                        // Once logged in, the authorization token stored in the session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        response.json().then(errorData => {
                            const errors = errorData.error;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                confirmButtonText: 'Aceptar'
                            });   
                        });                    
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Completado!',
                        text: data.message + '.',
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clearModal(document.getElementById("services_entry_modal"));
                            $('#services_entry_modal').modal('hide');
                            location.reload();
                        }
                    }); 
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                        confirmButtonText: 'Aceptar'
                    }); 
                });
            });
        }

        // Updating service info.
        const editButtons = document.querySelectorAll('#tablaServicios .btn-primary');
        editButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                document.getElementById('txtServiceUpd').value = this.dataset.serviceName;
            });
        });

        var btnUpdateService = document.getElementById("btnUpdateService");
        if (btnUpdateService) {
            btnUpdateService.addEventListener("click", async (event) => {
                event.preventDefault();

                const data = {
                    service: document.getElementById("txtServiceUpd").value.trim(),
                    description: document.getElementById("txtServiceDescriptionUpd").value.trim(),
                    supplier: document.getElementById("txtSupplierUpd").value.trim(),
                    serviceManager: document.getElementById("txtServiceManagerUpd").value.trim(),
                    costPrice: document.getElementById("txtCostPriceUpd").value.trim(),
                    basePrice: document.getElementById("txtBasePriceUpd").value.trim(),
                    firstCommission: document.getElementById("txtFirstCommissionUpd").value.trim(),
                    secondCommission: document.getElementById("txtSecondCommissionUpd").value.trim(),
                    finalPrice: document.getElementById("txtFinalPriceUpd").value.trim()
                };

                fetch('/api/servicios/editar-servicio', {
                    method: 'PUT',
                    headers: {
                        // Once logged in, the authorization token stored in the session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            response.json().then(errorData => {
                                const errors = errorData.error;
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                    confirmButtonText: 'Aceptar'
                                });   
                            });                    
                            throw new Error('Error en la solicitud');
                        }
                        return response.json();
                    })
                    .then(data => {
                        Swal.fire({
                            icon: 'success',
                            title: '¡Completado!',
                            text: data.message + '.',
                            confirmButtonText: 'Aceptar'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                clearModal(document.getElementById("modify-service_entry_modal"));
                                $('#modify-service_entry_modal').modal('hide');
                                location.reload();
                            }
                        }); 
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                            confirmButtonText: 'Aceptar'
                        }); 
                    });
            });
        }

        // Deleting user info.
        const deleteButtons = document.querySelectorAll('#tablaServicios .btn-danger');
        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                const data = {
                    service: this.dataset.serviceName
                };

                fetch('/api/servicios/eliminar-servicio', {
                    method: 'DELETE',
                    headers: {
                        // Once logged in, the authorization token stored in the session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        response.json().then(errorData => {
                            const errors = errorData.error;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                confirmButtonText: 'Aceptar'
                            });   
                        });                    
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Completado!',
                        text: data.message + '.',
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }
                    }); 
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                        confirmButtonText: 'Aceptar'
                    }); 
                });
            });
        });
    });

        function showData(button) {

            const name = button.getAttribute('data-service-name')
            const description = button.getAttribute('data-service-description')   
            const supplier = button.getAttribute('data-service-provider')   
            const serviceManager = button.getAttribute('data-service-manager')    
            const costPrice = button.getAttribute('data-service-cost-price') 
            const basePrice = button.getAttribute('data-service-base-price')    
            const firstCommission = button.getAttribute('data-service-first-commission')    
            const secondCommission = button.getAttribute('data-service-second-commission')    
            const finalPrice = button.getAttribute('data-service-final-price')

            document.querySelector('#txtServiceUpd').value = name
            document.querySelector('#txtServiceDescriptionUpd').value = description
            document.querySelector('#txtSupplierUpd').value = supplier
            document.querySelector('#txtServiceManagerUpd').value = serviceManager;
            document.querySelector('#txtCostPriceUpd').value = costPrice;
            document.querySelector('#txtBasePriceUpd').value = basePrice;
            document.querySelector('#txtFirstCommissionUpd').value = firstCommission;
            document.querySelector('#txtSecondCommissionUpd').value = secondCommission;
            document.querySelector('#txtFinalPriceUpd').value = finalPrice;


    }

</script>