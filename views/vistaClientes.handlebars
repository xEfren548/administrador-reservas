<div class="calendar-header">
    <div class="bg-dark mb-3">
        <a name="" id="crear-reserva-btn" class="btn btn-secondary btn-sm m-3" href="#" role="button"
            data-bs-toggle="modal" data-bs-target="#clientEntryModal">Alta de Cliente</a>
    </div>
</div>

<div class="row flex-nowrap justify-content-center mt-3" style="width: 95%;">
    <div class="col-10">
        <h1>Lista de clientes</h1>
        <table class="table table-dark table-hover" id="tablaClientes">
            <thead class="table-light">
                <tr>
                    <th scope="col">Nombre</th>
                    <th scope="col">Apellido</th>
                    <th scope="col">Teléfono</th>
                    <th scope="col">Dirección de correo electrónico</th>
                    <th scope="col">Dirección</th>
                    <th scope="col">Tipo de identificación</th>
                    <th scope="col">Número de identificación</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each clients}}
                <tr>
                    <td>{{firstName}}</td>
                    <td>{{lastName}}</td>
                    <td>{{phone}}</td>
                    <td>{{email}}</td>
                    <td> {{address}}</td>
                    <td>{{identificationType}}</td>
                    <td>{{identificationNumber}}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-primary" data-client-email="{{email}}"
                        data-client-firstName="{{firstName}}" data-client-lastName="{{lastName}}"
                        data-client-phone="{{phone}}" data-client-address="{{address}}"
                        data-client-identificationType="{{identificationType}}" data-client-identificationNumber="{{identificationNumber}}"

                            data-bs-toggle="modal" data-bs-target="#modifyClientEntryModal" onclick="showData(this)">
                            <i class="fa fa-pencil" aria-hidden="true"></i>
                        </button>
                        <button type="button" class="btn btn-danger" data-client-email="{{email}}">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                        <div class="form-item">
                            <p name="errMsg" class="error"></p>
                        </div>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>

<!-- Modals -->
<!-- Modal alta cliente -->
<div class="modal fade" id="clientEntryModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmCreateClient" action="/api/clientes/crear-cliente" method="post" class="modal-dialog modal-lg"
        role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Alta de cliente</h5>
                <button type="button" class="close" onclick="$('#clientEntryModal').modal('hide');" aria-label="Close">
                    &times;
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientName">Nombre</label>
                                <input type="text" name="txtClientName" id="txtClientName"
                                    class="form-control onlydatepicker" placeholder="Nombre">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientLastname">Apellido</label>
                                <input type="text" name="txtClientLastname" id="txtClientLastname" class="form-control"
                                    placeholder="Apellido">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientPhone">Teléfono</label>
                                <input type="tel" name="txtClientPhone" id="txtClientPhone" class="form-control"
                                    placeholder="Teléfono">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientAddress">Dirección</label>
                                <input type="text" name="txtClientAddress" id="txtClientAddress" class="form-control"
                                    placeholder="Dirección">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientEmail">Email</label>
                                <input type="text" name="txtClientEmail" id="txtClientEmail" class="form-control"
                                    placeholder="Email">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8 mb-2">
                                <label for="slctClientIdType" class="form-label">Tipo de identificación</label>
                                <select name="slctClientIdType" id="slctClientIdType" class="form-select form-select-md mb-2" required>
                                    <option value="" selected disabled> Selecciona el tipo de identificación del cliente
                                    </option>
                                    <option value="INE">INE</option>
                                    <option value="Pasaporte">Pasaporte</option>
                                    <option value="Licencia de conducir">Licencia de conducir</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientIdNumber">Número de identificación</label>
                                <input type="text" name="txtClientIdNumber" id="txtClientIdNumber" class="form-control"
                                    placeholder="Tipo de identificación">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-item">
                <p id="txtInsertClientError" name="errMsg" class="error"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnSaveClient">Agregar Cliente</button>
            </div>
        </div>
    </form>
</div>
<!-- End Modal Alta cliente -->

<!-- Modal modificar cliente -->
<div class="modal fade" id="modifyClientEntryModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmUpdateClient" action="/api/servicios/editar-servicio" method="put" class="modal-dialog modal-lg"
        role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Modificar Cliente</h5>
                <button type="button" class="close" onclick="$('#modifyClientEntryModal').modal('hide');"
                    aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientNameUpd">Nombre</label>
                                <input type="text" name="txtClientNameUpd" id="txtClientNameUpd"
                                    class="form-control onlydatepicker" placeholder="Nombre">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientLastnameUpd">Apellido</label>
                                <input type="text" name="txtClientLastnameUpd" id="txtClientLastnameUpd"
                                    class="form-control" placeholder="Apellido">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientPhoneUpd">Teléfono</label>
                                <input type="tel" name="txtClientPhoneUpd" id="txtClientPhoneUpd" class="form-control"
                                    placeholder="Teléfono">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientAddressUpd">Dirección</label>
                                <input type="text" name="txtClientAddressUpd" id="txtClientAddressUpd"
                                    class="form-control" placeholder="Dirección">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientEmailUpd">Email</label>
                                <input type="email" name="txtClientEmailUpd" id="txtClientEmailUpd" class="form-control"
                                    placeholder="Email" disabled>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8 mb-2">
                                <label for="slctClientIdTypeUpd" class="form-label">Tipo de identificación</label>
                                <select name="slctClientIdTypeUpd" id="slctClientIdTypeUpd" class="form-select form-select-md" required>
                                    <option value="" selected disabled> Selecciona el tipo de identificación del cliente
                                    </option>
                                    <option value="INE">INE</option>
                                    <option value="Pasaporte">Pasaporte</option>
                                    <option value="Licencia de conducir">Licencia de conducir</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtClientIdNumberUpd">Número de identificación</label>
                                <input type="text" name="txtClientIdNumberUpd" id="txtClientIdNumberUpd"
                                    class="form-control" placeholder="Tipo de identificación">
                            </div>
                        </div>
                    </div> <!-- Cierre row -->
                </div>
            </div>
            <div class="form-item">
                <p id="txtUpdClientError" name="errMsg" class="error"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnUpdateClient">Modificar Cliente</button>
            </div>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Variables.
        var table = document.getElementById("tablaClientes");
        if (table) {
            var dataTable = new DataTable(table, {
                "order": [], // Puedes especificar aquí el orden inicial de las columnas
                "paging": true, // Habilita la paginación
                "lengthMenu": [5, 10, 25, 50], // Define el menú de longitud de página
                "pageLength": 10, // Establece la longitud de página inicial
                "dom": 'Bfrtip', // Añade los botones a la interfaz
                "buttons": [
                    {
                        extend: 'csvHtml5',
                        text: 'Exportar a CSV',

                    }
                ],
                "initComplete": function () {
                    // Aplica las clases a los botones después de la inicialización
                    var buttons = document.querySelectorAll('.dt-button');
                    buttons.forEach(function (button) {
                        button.classList.add('btn', 'btn-info');
                    });
                }
            });
        }

        // Functions.
        function clearModal(modal) {
            const inputs = modal.querySelectorAll('input');
            inputs.forEach(function (input) {
                input.value = "";
            });
            modal.querySelectorAll("p[name='errMsg']")[0].innerHTML = "";
        }

        // Clearing user's info when closing modal.
        const modals = document.querySelectorAll('.modal');
        modals.forEach(function (modal) {
            modal.addEventListener('hidden.bs.modal', () => {
                clearModal(modal);
            });
        });

        // Saving new client.
        var btnSaveClient = document.getElementById("btnSaveClient");
        if (btnSaveClient) {
            btnSaveClient.addEventListener("click", async (event) => {
                event.preventDefault();

                const data = {
                    firstName: document.getElementById("txtClientName").value,
                    lastName: document.getElementById("txtClientLastname").value,
                    phone: document.getElementById("txtClientPhone").value,
                    address: document.getElementById("txtClientAddress").value,
                    email: document.getElementById("txtClientEmail").value,
                    identificationType: document.getElementById("slctClientIdType").value,
                    identificationNumber: document.getElementById("txtClientIdNumber").value
                };

                fetch('/api/clientes/crear-cliente', {
                    method: 'POST',
                    headers: {
                        // Once logged in, the authorization token stored inthe session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        response.json().then(errorData => {
                            const errors = errorData.error;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                confirmButtonText: 'Aceptar'
                            });   
                        });                    
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Completado!',
                        text: data.message + '.',
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clearModal(document.getElementById("clientEntryModal"));
                            $('#clientEntryModal').modal('hide');
                            location.reload();
                        }
                    });                    
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                        confirmButtonText: 'Aceptar'
                    }); 
                });
            });
        }

        // Updating client info.
        const editButtons = document.querySelectorAll('#tablaClientes .btn-primary');
        editButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                document.getElementById('txtClientEmailUpd').value = this.dataset.clientEmail;
            });
        });

        var btnUpdateClient = document.getElementById("btnUpdateClient");
        if (btnUpdateClient) {
            btnUpdateClient.addEventListener("click", async (event) => {
                event.preventDefault();
                const data = {
                    firstName: document.getElementById("txtClientNameUpd").value.trim(),
                    lastName: document.getElementById("txtClientLastnameUpd").value.trim(),
                    phone: document.getElementById("txtClientPhoneUpd").value.trim(),
                    address: document.getElementById("txtClientAddressUpd").value.trim(),
                    email: document.getElementById("txtClientEmailUpd").value.trim(),
                    identificationType: document.getElementById("slctClientIdTypeUpd").value.trim(),
                    identificationNumber: document.getElementById("txtClientIdNumberUpd").value.trim()
                };

                fetch('/api/clientes/editar-cliente', {
                    method: 'PUT',
                    headers: {
                        // Once logged in, the authorization token stored inthe session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        response.json().then(errorData => {
                            const errors = errorData.error;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                confirmButtonText: 'Aceptar'
                            });   
                        });                    
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    Swal.fire({
                        icon: 'success',
                        title: '¡Completado!',
                        text: data.message + '.',
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clearModal(document.getElementById("modifyClientEntryModal"));
                            $('#modifyClientEntryModal').modal('hide');
                            location.reload();
                        }
                    }); 
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                        confirmButtonText: 'Aceptar'
                    }); 
                });
            });
        }

        // Deleting client info.
        const deleteButtons = document.querySelectorAll('#tablaClientes .btn-danger');
        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                const data = {
                    email: this.dataset.clientEmail
                };

                fetch('/api/clientes/eliminar-cliente', {
                    method: 'DELETE',
                    headers: {
                        // Once logged in, the authorization token stored in the session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        response.json().then(errorData => {
                            const errors = errorData.error;
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: "Error en la solicitud: " + errors[0].message.toLowerCase() + ".",
                                confirmButtonText: 'Aceptar'
                            });   
                        });                    
                        throw new Error('Error en la solicitud');
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Completado!',
                        text: data.message + '.',
                        confirmButtonText: 'Aceptar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clearModal(document.getElementById("clientEntryModal"));
                            $('#clientEntryModal').modal('hide');
                            location.reload();
                        }
                    });                    
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al enviar la solicitud: ' + error.toLowerCase() + '.',
                        confirmButtonText: 'Aceptar'
                    }); 
                });
            });            
        });

    });

    function showData(button) {
        const firstName = button.getAttribute('data-client-firstName');
        const lastName = button.getAttribute('data-client-lastName');
        const email = button.getAttribute('data-client-email');
        const address = button.getAttribute('data-client-address');
        const identificationType = button.getAttribute('data-client-identificationType');
        const identificationNumber = button.getAttribute('data-client-identificationNumber');
        const phone = button.getAttribute('data-client-phone');


        document.querySelector('#txtClientNameUpd').value = firstName
        document.querySelector('#txtClientLastnameUpd').value = lastName
        document.querySelector('#txtClientAddressUpd').value = address
        document.querySelector('#slctClientIdTypeUpd').value = identificationType;
        document.querySelector('#txtClientIdNumberUpd').value = identificationNumber;
        document.querySelector('#txtClientPhoneUpd').value = phone;
        document.querySelector('#txtClientEmailUpd').value = email;


    }
</script>