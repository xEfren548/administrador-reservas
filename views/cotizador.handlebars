<div class="bg-black text-white">
    <div class="min-h-screen flex flex-col items-center p-4">
        <h1 class="text-3xl font-bold text-center mb-8">Cotizador de Cabañas</h1>

        <!-- Contenedor del buscador -->
        <div class="w-auto max-w-6xl bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-6">
            <form class="flex flex-col md:flex-row gap-4">
                <!-- Campo: Categorías (dropdown con checkboxes) -->
                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-400">Categorías</label>
                    <div class="relative mt-1">
                        <!-- Botón para abrir/cerrar el dropdown -->
                        <button id="dropdown-button" type="button"
                            class="w-96 p-2 bg-gray-800 border border-gray-700 rounded-md text-white text-left flex items-center justify-between">
                            <span>Seleccionar categorías</span>
                            <svg class="h-5 w-5">...</svg>
                        </button>

                        <!-- Dropdown con checkboxes -->
                        <div id="dropdown-content"
                            class="absolute z-10 mt-2 w-96 bg-gray-800 border border-gray-700 rounded-md shadow-lg hidden">
                            <div class="p-2">
                                <!-- Checkbox "Mostrar todo" -->
                                <label class="flex items-center space-x-2 p-2 hover:bg-gray-700 rounded-md">
                                    <input type="checkbox" name="categorias" value="all"
                                        class="form-checkbox text-blue-500 bg-gray-700 border-gray-600 rounded focus:ring-blue-500"
                                        checked />
                                    <span>Mostrar todo</span>
                                </label>

                                <!-- Checkboxes de categorías -->
                                {{#each tipologias}}
                                <label for="categoria-{{@index}}"
                                    class="flex items-center space-x-2 p-2 hover:bg-gray-700 rounded-md cursor-pointer">
                                    <input type="checkbox" id="categoria-{{@index}}" name="categorias"
                                        value="{{this.tipologia}}"
                                        class="form-checkbox text-blue-500 bg-gray-700 border-gray-600 rounded focus:ring-blue-500" />
                                    <span>{{this.tipologia}}</span>
                                </label>
                                {{/each}}

                            </div>
                        </div>
                    </div>
                </div>

                <!-- Campo: Fecha de llegada -->
                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-400">Fechas</label>
                    <input type="text" id="fecha-input" placeholder="Seleccionar fechas"
                        class="mt-1 block w-72 p-2 bg-gray-800 border border-gray-700 rounded-md text-white placeholder-current flatpickr-input" />
                </div>

                <!-- Campo: Fecha de salida -->
                <input type="hidden" id="fecha-llegada">
                <input type="hidden" id="fecha-salida">


                <!-- Campo: Huéspedes -->
                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-400">Huéspedes</label>
                    <div class="p-2 bg-gray-800 border border-gray-700 rounded-md text-white">
                        <!-- Título y descripción -->
                        {{!-- <div class="text-sm">Huéspedes</div> --}}

                        <!-- Contador de huéspedes -->
                        <div class="flex items-center justify-between w-32 h-auto">
                            <!-- Botón para disminuir -->
                            <button id="decrementar"
                                class="p-1 bg-gray-700 rounded-md hover:bg-gray-600 transition-colors"
                                aria-label="Disminuir número de huéspedes">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20"
                                    fill="currentColor">
                                    <path fill-rule="evenodd" d="M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z"
                                        clip-rule="evenodd" />
                                </svg>
                            </button>

                            <!-- Número de huéspedes -->
                            <span id="numero-huespedes" class="text-lg">1</span>

                            <!-- Botón para aumentar -->
                            <button id="incrementar"
                                class="p-1 bg-gray-700 rounded-md hover:bg-gray-600 transition-colors"
                                aria-label="Aumentar número de huéspedes">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20"
                                    fill="currentColor">
                                    <path fill-rule="evenodd"
                                        d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"
                                        clip-rule="evenodd" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="flex-1 justify-center items-center text-center ">
                    <label class="block text-sm font-medium text-gray-400">Mostrar solo disponibles</label>
                    <input type="checkbox" id="buscar-solo-disponibles"
                        class="form-checkbox text-blue-500 bg-gray-700 border-gray-600 rounded focus:ring-blue-500" />
                </div>

                <!-- Botón de búsqueda -->
                <div class="flex items-end">
                    <button type="submit" id="buscar-chalets-btn"
                        class="w-full md:w-auto p-3 text-white rounded-md transition-colors flex items-center justify-center bg-gradient-to-r from-purple-600 to-blue-500 hover:from-purple-700 hover:to-blue-600 shadow-lg hover:shadow-xl">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20"
                            fill="currentColor">
                            <path fill-rule="evenodd"
                                d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                                clip-rule="evenodd" />
                        </svg>
                        Buscar
                    </button>
                </div>
            </form>
        </div>
        <div id="resultados" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4"></div>
    </div>

</div>

<script src="https://npmcdn.com/flatpickr/dist/l10n/es.js"></script>
<script>
    // Configuración de Flatpickr
    const fechaInput = document.getElementById("fecha-input");

    flatpickr("#fecha-input", {
        mode: "range", // Selección de rango de fechas
        dateFormat: "d/m/Y", // Formato de fecha: dd/mm/aaaa
        locale: "es", // Idioma español
        minDate: "today", // Fecha mínima: hoy
        disableMobile: true, // Evita el comportamiento nativo en móviles
        onChange: function (selectedDates, dateStr, instance) {
            const fechaLlegadaInput = document.getElementById("fecha-llegada");
            const fechaSalidaInput = document.getElementById("fecha-salida");

            if (selectedDates.length === 2) {
                // Formatear las fechas usando formatDate
                const fechaLlegada = instance.formatDate(selectedDates[0], "d/m/Y");
                const fechaSalida = instance.formatDate(selectedDates[1], "d/m/Y");

                // Actualizar el valor del campo de entrada manualmente
                fechaInput.value = `${fechaLlegada} a ${fechaSalida}`;

                fechaLlegadaInput.value = fechaLlegada;
                fechaSalidaInput.value = fechaSalida;


                console.log("Fecha de llegada:", fechaLlegada);
                console.log("Fecha de salida:", fechaSalida);
            }
        },
    });

    // Variables
    const numeroHuespedes = document.getElementById("numero-huespedes");
    const botonDecrementar = document.getElementById("decrementar");
    const botonIncrementar = document.getElementById("incrementar");

    let contador = 1; // Valor inicial

    // Función para actualizar el contador
    const actualizarContador = () => {
        numeroHuespedes.textContent = contador;
    };

    // Evento para disminuir el número de huéspedes
    botonDecrementar.addEventListener("click", (e) => {
        e.preventDefault();
        if (contador > 1) {
            contador--;
            actualizarContador();
        }
    });

    // Evento para aumentar el número de huéspedes
    botonIncrementar.addEventListener("click", (e) => {
        e.preventDefault();
        if (contador < 20) { // Límite máximo de 10 huéspedes
            contador++;
            actualizarContador();
        }
    });

    // FUNCIONES PARA CATEGORIAS DESPLEGABLES
    document.addEventListener("DOMContentLoaded", function () {
        // Evita que el formulario se recargue
        document.querySelector("form").addEventListener("submit", function (event) {
            event.preventDefault();
        });

        const dropdownButton = document.getElementById("dropdown-button");
        const dropdownContent = document.getElementById("dropdown-content");
        const mostrarTodoCheckbox = document.querySelector('input[name="categorias"][value="all"]');
        const categoriaCheckboxes = document.querySelectorAll('input[name="categorias"]:not([value="all"])');

        // Mostrar / Ocultar dropdown
        dropdownButton.addEventListener("click", function (event) {
            event.stopPropagation();
            dropdownContent.classList.toggle("hidden");
        });

        // Cerrar el dropdown si se hace clic fuera
        document.addEventListener("click", function (event) {
            if (!dropdownContent.contains(event.target) && !dropdownButton.contains(event.target)) {
                dropdownContent.classList.add("hidden");
            }
        });

        // Cuando se selecciona cualquier categoría distinta a "Mostrar todo"
        categoriaCheckboxes.forEach(checkbox => {
            checkbox.addEventListener("change", function () {
                if (this.checked) {
                    mostrarTodoCheckbox.checked = false; // Deseleccionar "Mostrar todo" si se selecciona otra categoría
                }
            });
        });

        // Cuando se selecciona "Mostrar todo"
        mostrarTodoCheckbox.addEventListener("change", function () {
            if (this.checked) {
                categoriaCheckboxes.forEach(checkbox => {
                    checkbox.checked = false; // Deseleccionar todas las categorías si "Mostrar todo" es seleccionado
                });
            }
        });

        // ENVIO DE INFORMACION PARA BUSCAR CABAÑAS DISPONIBLES

        const buscarChaletsBtn = document.getElementById("buscar-chalets-btn");

        buscarChaletsBtn.addEventListener("click", async function (event) {
            event.preventDefault();

            const checkboxesSeleccionados = document.querySelectorAll('input[name="categorias"]:checked');
            const categoriasSeleccionadas = Array.from(checkboxesSeleccionados).map(checkbox => checkbox.value);
            const fechaLlegada = document.getElementById("fecha-llegada").value;
            const fechaSalida = document.getElementById("fecha-salida").value;
            const huespedes = document.getElementById("numero-huespedes").textContent;
            const buscarSoloDisponiblesChk = document.getElementById("buscar-solo-disponibles").checked;

            console.log("Categorias seleccionadas:", categoriasSeleccionadas);
            console.log("Fecha de llegada:", fechaLlegada);
            console.log("Fecha de salida:", fechaSalida);
            console.log("Número de húspedes:", huespedes);
            console.log("Buscar solo disponibles:", buscarSoloDisponiblesChk);

            if (categoriasSeleccionadas.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No ha seleccionado ninguna categoría',
                    text: 'Por favor, seleccione al menos una categoría.',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            if (!fechaLlegada || !fechaSalida) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Faltan fechas',
                    text: 'Por favor, seleccione las fechas de llegada y salida.',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            if (!huespedes) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No ha seleccionado el número de húspedes',
                    text: 'Por favor, seleccione el número de húspedes.',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            const datos = {
                categorias: categoriasSeleccionadas,
                fechaLlegada: fechaLlegada,
                fechaSalida: fechaSalida,
                huespedes: parseInt(huespedes, 10), // Convertir a número
                soloDisponibles: buscarSoloDisponiblesChk,
            };

            console.log("Datos a enviar:", datos);

            try {
                Swal.fire({
                    title: 'Cargando...',
                    text: 'Buscando cabañas disponibles...',
                    icon: 'info',
                    showConfirmButton: false
                })
                // Enviar los datos al backend usando fetch
                const respuesta = await fetch("/api/eventos/cotizaciones", {
                    method: "POST", // Método HTTP
                    headers: {
                        "Content-Type": "application/json", // Indicar que el cuerpo es JSON
                    },
                    body: JSON.stringify(datos), // Convertir el objeto a JSON
                });

                // Verificar si la respuesta es exitosa
                if (!respuesta.ok) {
                    const errorData = await respuesta.json();
                    throw new Error("Error en la solicitud: " + errorData.message);
                }

                // Obtener la respuesta del backend (si es necesario)
                const resultado = await respuesta.json();
                console.log("Respuesta del backend:", resultado);

                Swal.close();

                // Aquí puedes manejar la respuesta del backend (por ejemplo, mostrar las habitaciones disponibles)
                mostrarResultados(resultado);

            } catch (error) {
                Swal.close();
                console.error("Error al enviar los datos:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message,
                    confirmButtonText: 'Aceptar'
                })
            }
        });

        function mostrarResultados(habitaciones) {
            const contenedorResultados = document.getElementById("resultados");
            contenedorResultados.innerHTML = ""; // Limpiar resultados anteriores

            habitaciones.forEach((habitacion) => {
                const tarjeta = document.createElement("div");
                tarjeta.classList.add(
                    "bg-gray-800",
                    "rounded-lg",
                    "shadow-lg",
                    "overflow-hidden"
                );

                // Imagen de la habitación (puedes usar una imagen real si está disponible)
                const imagen = document.createElement("img");
                imagen.src = `https://navarro.integradev.site/navarro/${habitacion.image}`
                console.log(imagen.src)
                //imagen.src = "https://www.bosquestapalpa.com.mx/bosquestapalpa/contenido/8a62e2784_blog_.jpg";
                imagen.alt = habitacion.name;
                imagen.classList.add("w-full", "h-48", "object-cover");

                const fallbackImage = "https://www.bosquestapalpa.com.mx/bosquestapalpa/contenido/8a62e2784_blog_.jpg";

                imagen.onerror = () => {
                    console.warn(`La imagen ${imagen.src} no se pudo cargar. Usando imagen de respaldo.`);
                    imagen.src = fallbackImage;
                };
                tarjeta.appendChild(imagen);

                // Contenido de la tarjeta
                const contenido = document.createElement("div");
                contenido.classList.add("p-4");

                // Nombre de la habitación
                const nombre = document.createElement("h3");
                nombre.classList.add("text-xl", "font-semibold", "text-white");
                nombre.textContent = habitacion.name;
                contenido.appendChild(nombre);

                // Precio por noche
                const precio = document.createElement("p");
                precio.classList.add("text-white-400", "mt-2", "font-semibold");
                precio.textContent = `$${habitacion.price} por ${habitacion.nights} noche(s)`;
                contenido.appendChild(precio);

                // Capacidad máxima
                const capacidad = document.createElement("p");
                capacidad.classList.add("text-gray-400");
                capacidad.textContent = `${habitacion.minPax}-${habitacion.maxPax} huéspedes`;
                contenido.appendChild(capacidad);

                // Botón de reservar
                const botonReservar = document.createElement("button");
                botonReservar.classList.add(
                    "mt-4",
                    "w-full",
                    "bg-blue-600",
                    "text-white",
                    "py-2",
                    "px-4",
                    "rounded-md",
                    "hover:bg-blue-700",
                    "transition-colors"
                );
                botonReservar.textContent = "Reservar";
                contenido.appendChild(botonReservar);

                // Agregar contenido a la tarjeta
                tarjeta.appendChild(contenido);

                // Agregar tarjeta al contenedor de resultados
                contenedorResultados.appendChild(tarjeta);
            });
        }
    });


</script>