<div class="calendar-header">
    <div class="bg-dark mb-3">
        <a name="" id="crear-reserva-btn" class="btn btn-secondary btn-sm m-3" href="#" role="button"
            data-bs-toggle="modal" data-bs-target="#user_entry_modal">Alta de Usuario</a>
    </div>


</div>

<div class="row flex-nowrap justify-content-center mt-3" style="width: 95%;">
    <div class="col-10">
        <h1>Lista de usuarios</h1>
        <table class="table table-dark table-hover" id="tablaUsuarios">
            <thead class="table-light">
                <tr>
                    <th scope="col">Nombre</th>
                    <th scope="col">Apellido</th>
                    <th scope="col">Email</th>
                    <th scope="col">Privilegio</th>
                    <th scope="col">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each users}}
                <tr>
                    <td>{{firstName}}</td>
                    <td>{{lastName}}</td>
                    <td>{{email}}</td>
                    <td>{{privilege}}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-primary" data-client-email="{{email}}"
                            data-bs-toggle="modal" data-bs-target="#modify-user_entry_modal">
                            <i class="fa fa-pencil" aria-hidden="true"></i>
                        </button>
                        <button type="button" class="btn btn-danger" data-client-email="{{email}}">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                        <div class="form-item">
                            <p name="errMsg" class="error"></p>
                        </div>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

    </div>
</div>

{{!-- Modals --}}
<!-- Modal Alta usuario -->
<div class="modal fade" id="user_entry_modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmNewUser" action="/api/auth/crear-usuario" method="post" class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Alta de Usuario</h5>
                <button type="button" class="close" onclick="$('#user_entry_modal').modal('hide');" aria-label="Close">
                    &times;
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserName">Nombre</label>
                                <input type="text" name="txtUserName" id="txtUserName"
                                    class="form-control onlydatepicker" placeholder="Nombre">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserLastname">Apellido</label>
                                <input type="text" name="txtUserLastname" id="txtUserLastname" class="form-control"
                                    placeholder="Apellido">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserEmail">Email: </label>
                                <input type="email" name="txtUserEmail" id="txtUserEmail" class="form-control"
                                    placeholder="Email">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserPassword">Contraseña: </label>
                                <input type="password" name="txtUserPassword" id="txtUserPassword"
                                    class="form-control" placeholder="Contraseña">
                            </div>
                        </div>
                        <div class="row">
                            <label for="slctUserPrivileges">Privilegio: </label>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <select name="slctUserPrivileges" id="slctUserPrivileges" required>
                                    <option value="" selected disabled> Selecciona un privilegio para el usuario--</option>
                                    <option value="">Selecciona una opción</option>
                                    <option value="Administrador">Administrador</option>
                                    <option value="Vendedor">Vendedor</option>
                                    <option value="Limpieza">Limpieza</option>
                                    <option value="Servicios adicionales">Servicios adicionales</option>
                                    <option value="Dueño de cabañas">Dueño de cabañas</option>
                                    <option value="Inversionistas">Inversionistas</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <label for="slctUserAdmin">Administrador ligado: </label>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <select name="slctUserAdmin" id="slctUserAdmin" required>
                                    <option value="" selected disabled> Selecciona un administrador para el usuario--
                                    </option>
                                    {{#each admins}}
                                        <option value={{_id}}>{{firstName}} {{lastName}}</option>
                                    {{/each}} 
                                </select>
                            </div>
                        </div>
                        <div class="form-item">
                            <p id="txtInsertUserError" name="errMsg" class="error"></p>
                        </div>
                        <div class="modal_footer" style="display: flex; justify-content: right; margin: 10px 0;">
                            <button type="submit" class="btn btn-primary" id="btnSaveUser">Modificar Usuario</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-item">
            <p id="txtUpdUserError" name="errMsg" class="error"></p>
        </div>
    </form>
</div>
<!-- End Modal Alta usuario -->

{{!-- Modal modificar usuario --}}
<div class="modal fade" id="modify-user_entry_modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel"
    aria-hidden="true">
    <form id="frmUpdateUser" action="/api/usuarios/editar-usuario" method="put" class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Modificar Usuario</h5>
                <button type="button" class="close" onclick="$('#modify-user_entry_modal').modal('hide');"
                    aria-label="Close">
                    &times;
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <div class="row mt-2">
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserNameUpd">Nombre</label>
                                <input type="text" name="txtUserNameUpd" id="txtUserNameUpd"
                                    class="form-control onlydatepicker" placeholder="Nombre">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserLastnameUpd">Apellido</label>
                                <input type="text" name="txtUserLastnameUpd" id="txtUserLastnameUpd"
                                    class="form-control" placeholder="Apellido">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserEmailUpd">Email: </label>
                                <input type="email" name="txtUserEmailUpd" id="txtUserEmailUpd" class="form-control"
                                    placeholder="Email" disabled="true">
                            </div>
                        </div>
                        <div class="col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="txtUserPasswordUpd">Contraseña: </label>
                                <input type="password" name="txtUserPasswordUpd" id="txtUserPasswordUpd"
                                    class="form-control" placeholder="Contraseña">
                            </div>
                        </div>
                        <div class="row">
                            <label for="slctUserPrivilegesUpd">Privilegio: </label>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <select name="slctUserPrivilegesUpd" id="slctUserPrivilegesUpd" required>
                                    <option value="" selected disabled> Selecciona un privilegio para el usuario--
                                    </option>
                                    <option value="">Selecciona una opción</option>
                                    <option value="Administrador">Administrador</option>
                                    <option value="Vendedor">Vendedor</option>
                                    <option value="Limpieza">Limpieza</option>
                                    <option value="Servicios adicionales">Servicios adicionales</option>
                                    <option value="Dueño de cabañas">Dueño de cabañas</option>
                                    <option value="Inversionistas">Inversionistas</option>                                   
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <label for="slctUserAdminUpd">Administrador ligado: </label>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <select name="slctUserAdminUpd" id="slctUserAdminUpd" required>
                                    <option value="" selected disabled> Selecciona un administrador para el usuario--
                                    </option>
                                    {{#each admins}}
                                        <option value={{_id}}>{{firstName}} {{lastName}}</option>
                                    {{/each}} 
                                </select>
                            </div>
                        </div>
                        <div class="form-item">
                            <p id="txtUpdUserError" name="errMsg" class="error"></p>
                        </div>
                        <div class="modal_footer" style="display: flex; justify-content: right; margin: 10px 0;">
                            <button type="submit" class="btn btn-primary" id="btnUpdateUser">Modificar Usuario</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-item">
            <p id="txtUpdUserError" name="errMsg" class="error"></p>
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Variables.
        var table = document.getElementById("tablaUsuarios");
        if (table) {
            var dataTable = new DataTable(table, {
                "order": [], // Puedes especificar aquí el orden inicial de las columnas
                "paging": true, // Habilita la paginación
                "lengthMenu": [5, 10, 25, 50], // Define el menú de longitud de página
                "pageLength": 10 // Establece la longitud de página inicial
            });
        }

        // Functions.
        function clearModal(modal) {
            const inputs = modal.querySelectorAll('input');
            inputs.forEach(function (input) {
                input.value = "";
            });
            modal.querySelectorAll("p[name='errMsg']")[0].innerHTML = "";
        }

        // Clearing user's info when closing modal.
        const modals = document.querySelectorAll('.modal');
        modals.forEach(function (modal) {
            modal.addEventListener('hidden.bs.modal', () => {
                clearModal(modal);
            });
        });

        // Saving new user.
        var btnSaveUser = document.getElementById("btnSaveUser")
        if (btnSaveUser) {
            btnSaveUser.addEventListener("click", async (event) => {
                event.preventDefault();

                const data = {
                    firstName: document.getElementById("txtUserName").value.trim(),
                    lastName: document.getElementById("txtUserLastname").value.trim(),
                    email: document.getElementById("txtUserEmail").value.trim(),
                    password: document.getElementById("txtUserPassword").value.trim(),
                    privilege: document.getElementById("slctUserPrivileges").value.trim(),
                    administrator: document.getElementById("slctUserAdmin").value.trim()
                };

                fetch('/api/usuarios/crear-usuario', {
                    method: 'POST',
                    headers: {
                        // Once logged in, the authorization token stored inthe session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            const error = response.statusText;
                            document.getElementById("txtInsertUserError").innerHTML = "Error en la solicitud: " + error.toLowerCase() + ".";
                            throw new Error('Error en la solicitud: ' + error);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Respuesta del servidor:', data);
                        clearModal(document.getElementById("user_entry_modal"));
                        $('#user_entry_modal').modal('hide');
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Error al enviar la solicitud:', error);
                    });
            });
        }

        // Updating user info.
        const editButtons = document.querySelectorAll('#tablaUsuarios .btn-primary');
        editButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                document.getElementById('txtUserEmailUpd').value = this.dataset.clientEmail;
            });
        });

        var btnUpdateUser = document.getElementById("btnUpdateUser")
        if (btnUpdateUser) {
            btnUpdateUser.addEventListener("click", async (event) => {
                event.preventDefault();
                const data = {
                    firstName: document.getElementById("txtUserNameUpd").value.trim(),
                    lastName: document.getElementById("txtUserLastnameUpd").value.trim(),
                    email: document.getElementById("txtUserEmailUpd").value.trim(),
                    password: document.getElementById("txtUserPasswordUpd").value.trim(),
                    privilege: document.getElementById("slctUserPrivilegesUpd").value.trim(),
                    administrator: document.getElementById("slctUserAdminUpd").value.trim()
                };

                fetch('/api/usuarios/editar-usuario', {
                    method: 'PUT',
                    headers: {
                        // Once logged in, the authorization token stored inthe session cookies will automatically be added in each HTTP request.
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            const error = response.statusText;
                            document.getElementById("txtUpdUserError").innerHTML = "Error en la soliciutud: " + error.toLowerCase() + ".";
                            throw new Error('Error en la solicitud: ' + error);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Respuesta exitosa del servidor:', data);
                        clearModal(document.getElementById("modify-user_entry_modal"));
                        $('#modify-user_entry_modal').modal('hide');
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Ha ocurrido un error: ', error);
                    });
            });
        }

        // Deleting client info.
        const deleteButtons = document.querySelectorAll('#tablaUsuarios .btn-danger');
        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                const data = {
                    email: this.dataset.clientEmail
                };

                fetch('/api/usuarios/eliminar-usuario', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) {
                            const error = response.statusText;
                            this.closest("p[name='errMsg']").innerHTML = "Error en la soliciutud: " + error.toLowerCase() + ".";
                            throw new Error('Error en la solicitud: ' + error);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Respuesta exitosa del servidor:', data);
                        location.reload();
                    })
                    .catch(error => {
                        console.error('Ha ocurrido un error: ', error);
                    });
            });
        });

    });
</script>